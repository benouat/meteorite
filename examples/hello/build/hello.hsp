var $set=require("hsp/$set"); 
// ################################################################ 
//  This file has been generated by the hashspace compiler          
//  Direct MODIFICATIONS WILL BE LOST when the file is recompiled!  
// ################################################################ 


var hello =$set(exports, "hello", require("hsp/rt").template(["data"], function(n){
  var _helloworld;try {_helloworld=helloworld} catch(e) {_helloworld=n.g('helloworld')};
  return [n.elt("h1",0,0,0,[n.$text(0,["Welcome to meteorite !"])]),n.cpt([_helloworld,"helloworld"],{e1:[1,2,"data","names"]},{"names":["",1]},0),n.elt("p",0,0,0,[n.elt("label",0,0,0,[n.$text(0,["Your name"])]),n.elt("br",0,0,0),n.elt("input",{e1:[1,3,"data","names",0]},{"type":"text","value":["",1]},0)])];
}));


var HelloWorldCtrl = function HelloWorldCtrl() {
};
$set(HelloWorldCtrl.prototype, "attributes", {
  "names": { type: "object", binding: "2-way"}
});


var helloworld = require("hsp/rt").template({ctl:[HelloWorldCtrl,"HelloWorldCtrl"],ref:"ctrl"}, function(n){
  return [n.let({e1:[1,2,"ctrl","names"]},['myNames',1]),n.log({e1:[1,1,"scope"]},[1],'d:\Github\meteorite_mlaval\examples\hello\src\hello.hsp','',19,3),n.$foreach({e1:[1,1,"myNames"]},"name_key","name",0,1,[n.$if({e1:[6,function(a0) {return (a0 == "World");},2],e2:[1,1,"name"]},1,[n.elt("p",0,0,0,[n.elt("b",0,0,0,[n.$text({e1:[1,1,"name"]},["Bonjour ",1,"!"])])])],[n.$if({e1:[6,function(a0) {return (a0 == "Hashspace");},2],e2:[1,1,"name"]},1,[n.elt("p",0,0,0,[n.elt("i",0,0,0,[n.$text({e1:[1,1,"name"]},["Bonjour ",1,"!"])])])],[n.elt("p",0,0,0,[n.$text({e1:[1,1,"name"]},["Bonjour ",1,"!"])])])])])];
});